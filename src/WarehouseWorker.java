import java.sql.DriverManager;
import java.sql.ResultSet;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;


public class WarehouseWorker extends javax.swing.JFrame {
    
    private String workerID;

    public WarehouseWorker(String workerID){
        initComponents();
        this.setTitle("Warehouse Worker");
        jlabelID.setText("Welcome, "+ workerID + " !");
        this.workerID = workerID;
        fetch();
    }

    private WarehouseWorker() {
        initComponents();
        this.setTitle("Warehouse Worker");
        jlabelID.setText("Welcome, "+ workerID + " !");
        fetch();
    }

    private void fetch(){
        DefaultListModel dlm = new DefaultListModel();
        try{
            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
            java.sql.Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/WarehouseManagement ", "wms","wms");
            java.sql.Statement stmt = con.createStatement();
            String sql1 = "SELECT ORDERID FROM ORDERTABLE WHERE WORKERID = '" + workerID + "'";
            ResultSet rs1 = stmt.executeQuery(sql1); 
            
            while(rs1.next()){
                String OrderID = rs1.getString("OrderID");
                dlm.addElement(OrderID);
            }
            OrderID.setModel(dlm);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        OrderID = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        OrderItem = new javax.swing.JList<>();
        jButtonRefresh = new javax.swing.JButton();
        jButtonComplete = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jlabelID = new javax.swing.JLabel();
        CodeTextField = new javax.swing.JTextField();
        NameTextField = new javax.swing.JTextField();
        CategoryTextField = new javax.swing.JTextField();
        DescriptionTextField = new javax.swing.JTextField();
        LocationTextField = new javax.swing.JTextField();
        QuantityTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        Quantity = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Order Assigned");

        jLabel2.setText("Order Item");

        OrderID.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                OrderIDValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(OrderID);

        OrderItem.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                OrderItemValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(OrderItem);

        jButtonRefresh.setText("Refresh");
        jButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshActionPerformed(evt);
            }
        });

        jButtonComplete.setText("Complete");
        jButtonComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCompleteActionPerformed(evt);
            }
        });

        jLabel3.setText("Quantity of item in order:");

        jlabelID.setText("UserID");

        CodeTextField.setEditable(false);

        NameTextField.setEditable(false);

        CategoryTextField.setEditable(false);

        DescriptionTextField.setEditable(false);

        LocationTextField.setEditable(false);

        QuantityTextField.setEditable(false);

        jLabel10.setText("Stock ID");

        jLabel11.setText("Name");

        jLabel12.setText("Category");

        jLabel13.setText("Description");

        jLabel14.setText("Location");

        jLabel15.setText("Quantity");

        Quantity.setEditable(false);
        Quantity.setName(""); // NOI18N

        jButton1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton1.setText("LOG OUT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addComponent(jlabelID))))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButtonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonComplete)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(Quantity))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(NameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                            .addComponent(CategoryTextField)
                            .addComponent(CodeTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(22, 22, 22)
                                .addComponent(LocationTextField))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DescriptionTextField))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(24, 24, 24)
                                .addComponent(QuantityTextField)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel2))
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlabelID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRefresh)
                    .addComponent(jButtonComplete)
                    .addComponent(jLabel3)
                    .addComponent(Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel14)
                    .addComponent(LocationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel15)
                    .addComponent(QuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CategoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(DescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshActionPerformed
        fetch();
    }//GEN-LAST:event_jButtonRefreshActionPerformed

    private void OrderIDValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_OrderIDValueChanged
        DefaultListModel model = new DefaultListModel();
        try{
            String selectedOrder = OrderID.getSelectedValue();
           
            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
            java.sql.Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/WarehouseManagement", "wms", "wms");
            java.sql.Statement stmt = con.createStatement(); 
            String sql = "SELECT ORDERITEMID FROM ORDERITEM WHERE OrderID ='"+ selectedOrder + "'";
            ResultSet rs = stmt.executeQuery(sql); 
            
            
            while(rs.next()){
                String OrderItemID = rs.getString("OrderItemID");
                model.addElement(OrderItemID);
            }
                        
            OrderItem.setModel(model);
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_OrderIDValueChanged

    private void jButtonCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCompleteActionPerformed
        if (OrderID.getSelectedIndex() >= 0){
            int selectedOption = JOptionPane.showConfirmDialog(null, "Confirm?","Complete", JOptionPane.YES_NO_OPTION);  
            if (selectedOption == JOptionPane.YES_OPTION) {
                try{
                    String orderID = OrderID.getSelectedValue();
                    Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
                    java.sql.Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/WarehouseManagement", "wms", "wms");
                    java.sql.Statement stmt = con.createStatement(); 
                    String sql = "DELETE FROM ORDERTABLE WHERE ORDERID = '"+ orderID +"'";
                    stmt.execute(sql);
                    JOptionPane.showMessageDialog(null, "Order Completed");
                    fetch();

                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
            }
            else if (selectedOption == JOptionPane.NO_OPTION){
                JOptionPane.showMessageDialog(null, "Order Not Completed", "Not Completed", JOptionPane.OK_OPTION);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "No order selected.", "ERROR", JOptionPane.ERROR_MESSAGE);
        } 
    }//GEN-LAST:event_jButtonCompleteActionPerformed

    private void OrderItemValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_OrderItemValueChanged
        if (OrderItem.getSelectedIndex()>=0){
            try{
                String selected1 = OrderItem.getSelectedValue();
                Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
                java.sql.Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/WarehouseManagement", "wms", "wms");
                java.sql.Statement stmt = con.createStatement(); 
                String sql1= "SELECT ORDERITEMQUANTITY,STOCKID FROM ORDERITEM WHERE ORDERITEMID ='"+ selected1 + "'";
                ResultSet rs1= stmt.executeQuery(sql1);

                while(rs1.next()){
                    String OrderItemQuantity=rs1.getString("ORDERITEMQUANTITY");
                    Quantity.setText(OrderItemQuantity);
                    String StockID=rs1.getString("STOCKID");
                    CodeTextField.setText(StockID);
                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
            try{
                String selected1 = OrderItem.getSelectedValue().toString();

                Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
                java.sql.Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/WarehouseManagement", "wms", "wms");
                java.sql.Statement stmt = con.createStatement(); 
                String sql= "SELECT STOCKNAME, STOCKCATEGORY, DESCRIPTION, STOCKLOCATION, STOCKQUANTITY FROM STOCK WHERE STOCKID = (SELECT STOCKID FROM ORDERITEM WHERE ORDERITEMID='"+ selected1 + "')";
                ResultSet rs2 = stmt.executeQuery(sql);        

                if(rs2.next()){
                    String StockName = rs2.getString("STOCKNAME");
                    NameTextField.setText(StockName);  
                    String StockCategory = rs2.getString("STOCKCATEGORY");
                    CategoryTextField.setText(StockCategory);
                    String StockDescription = rs2.getString("DESCRIPTION");
                    DescriptionTextField.setText(StockDescription);
                    String StockLocation = rs2.getString("STOCKLOCATION");
                    LocationTextField.setText(StockLocation);
                    String StockQuantity = rs2.getString("STOCKQUANTITY");
                    QuantityTextField.setText(StockQuantity);
                }

            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            } 
        }
        else{
            CodeTextField.setText(null);
            NameTextField.setText(null);  
            CategoryTextField.setText(null);
            DescriptionTextField.setText(null);
            LocationTextField.setText(null);
            QuantityTextField.setText(null);
            Quantity.setText(null);
        }
    }//GEN-LAST:event_OrderItemValueChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedOption = JOptionPane.showConfirmDialog(null, "Do you want to log out?", "LOG OUT",  JOptionPane.YES_NO_OPTION);
        if (selectedOption == JOptionPane.YES_OPTION){
            this.dispose();
            LoginPage frame = new LoginPage();
            frame.setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WarehouseWorker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WarehouseWorker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WarehouseWorker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WarehouseWorker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WarehouseWorker().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CategoryTextField;
    private javax.swing.JTextField CodeTextField;
    private javax.swing.JTextField DescriptionTextField;
    private javax.swing.JTextField LocationTextField;
    private javax.swing.JTextField NameTextField;
    private javax.swing.JList<String> OrderID;
    private javax.swing.JList<String> OrderItem;
    private javax.swing.JTextField Quantity;
    private javax.swing.JTextField QuantityTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonComplete;
    private javax.swing.JButton jButtonRefresh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jlabelID;
    // End of variables declaration//GEN-END:variables
}
