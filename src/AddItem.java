import java.sql.DriverManager;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

public class AddItem extends javax.swing.JDialog {
    
    private String userID;

    public AddItem(java.awt.Frame parent, boolean modal, String userID) {
        super(parent, modal);
        initComponents();
        this.userID = userID;
        fetchSupplierID();
        fetchSupplierName();
    }
    
    private AddItem(java.awt.Frame parent, boolean modal){
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
    private static boolean validID(String userID){
        int digitCount = 0;
        int letterCount = 0;
        for (int i=0;i<userID.length();i++){
            if (Character.isLetter(userID.charAt(i)))
                letterCount++;
            else if (Character.isDigit(userID.charAt(i))){
                digitCount++;
            }
            else{
                return false;
            }
        }
        if (letterCount == 2 && digitCount == 4){
            return true;
        }
        else{
            return false;           
        }
    }
    
    private void fetchSupplierID(){
        try{
            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
            java.sql.Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/WarehouseManagement", "wms", "wms");
            java.sql.Statement stmt = con.createStatement();
            String sql1 = "SELECT SUPPLIERID FROM SUPPLIER";
            ResultSet rs = stmt.executeQuery(sql1);
            while(rs.next()){
                String id = rs.getString("SUPPLIERID");
                cmbSupplierID.addItem(id);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void fetchSupplierName(){
        String supplierID = cmbSupplierID.getSelectedItem().toString();
        try{
            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
            java.sql.Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/WarehouseManagement", "wms", "wms");
            java.sql.Statement stmt = con.createStatement();
            String sql1 = "SELECT SUPPLIERNAME FROM SUPPLIER WHERE SUPPLIERID = '" + supplierID + "'";
            ResultSet rs = stmt.executeQuery(sql1);
            while (rs.next()){
                String name = rs.getString("SUPPLIERNAME");
                txtSupplierName.setText(name);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }

   
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAddItem = new javax.swing.JButton();
        txtDescription = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtLocation = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        cmbCategory = new javax.swing.JComboBox<>();
        txtName = new javax.swing.JTextField();
        txtStockID = new javax.swing.JTextField();
        cmbSupplierID = new javax.swing.JComboBox<>();
        txtSupplierName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        btnAddItem.setText("Add item");
        btnAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItemActionPerformed(evt);
            }
        });

        jLabel4.setText("Stock ID:");

        jLabel5.setText("Name:");

        jLabel6.setText("Category:");

        jLabel7.setText("Description:");

        jLabel13.setText("Location:");

        jLabel14.setText("Quantity:");

        cmbCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kitchen", "Bedroom", "Dining Room", "Living Room", "Backyard", "Study Room" }));

        cmbSupplierID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSupplierIDActionPerformed(evt);
            }
        });

        txtSupplierName.setEditable(false);

        jLabel1.setText("Supplier ID:");

        jLabel2.setText("Supplier Name:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAddItem))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSupplierName)
                            .addComponent(cmbSupplierID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtName)
                            .addComponent(txtQuantity)
                            .addComponent(txtLocation)
                            .addComponent(txtDescription)
                            .addComponent(cmbCategory, 0, 190, Short.MAX_VALUE)
                            .addComponent(txtStockID))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStockID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cmbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSupplierID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSupplierName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddItem)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItemActionPerformed
        if (validID(txtStockID.getText())){
            int selectedOption = JOptionPane.showConfirmDialog(null, "Are you sure you want to add this item?", "Confirm Add", JOptionPane.YES_NO_OPTION);
            if (selectedOption == JOptionPane.YES_OPTION){
                try{  
                    String stockID = txtStockID.getText();
                    String name = txtName.getText();
                    String category = cmbCategory.getSelectedItem().toString();
                    String description = txtDescription.getText();
                    String location = txtLocation.getText();
                    int quantity = Integer.parseInt(txtQuantity.getText());
                    String supplierID = cmbSupplierID.getSelectedItem().toString();
                    Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
                    java.sql.Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/WarehouseManagement", "wms", "wms");
                    java.sql.Statement stmt = con.createStatement(); 
                    String sql = "INSERT INTO STOCK (STOCKID, STOCKNAME, STOCKCATEGORY, DESCRIPTION, STOCKLOCATION, STOCKQUANTITY, SUPPLIERID, MANAGERID) VALUES ('" 
                            + stockID + "','" + name + "','" + category + "','" + description + "','" + location + "'," + quantity + ",'" + supplierID + "','" + userID + "')";
                    stmt.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null, "The item has been successfully added");
                    this.dispose();
                }catch (Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "StockID must contains 2 letters and 4 digits.", "Error", JOptionPane.ERROR_MESSAGE);
            txtStockID.setText(null);
        }
    }//GEN-LAST:event_btnAddItemActionPerformed

    private void cmbSupplierIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSupplierIDActionPerformed
        fetchSupplierName();
    }//GEN-LAST:event_cmbSupplierIDActionPerformed

    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddItem dialog = new AddItem(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddItem;
    private javax.swing.JComboBox<String> cmbCategory;
    private javax.swing.JComboBox<String> cmbSupplierID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtStockID;
    private javax.swing.JTextField txtSupplierName;
    // End of variables declaration//GEN-END:variables
}
